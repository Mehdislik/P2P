<project name="FSP" default="all" basedir=".">
	<description>
		Peer to peer application for sharing files.
	</description>

	<property environment="env."/>
	<property name="env.CLASSPATH" value=""/>
	<fail message="Unset $CLASSPATH / %CLASSPATH% before running Ant !">
		<condition>
			<not>
				<equals arg1="${env.CLASSPATH}" arg2=""/>
			</not>
		</condition>
	</fail>

	<property name="lib" location="lib/"/>
	<property name="src" location="src/"/>
	<property name="build" location="build/"/>
	<property name="build.test.dir" location="build/test/"/>
	<property name="build.fr.dir" location="build/fr/"/>
	<property name="dist" location="dist/"/>
	<property name="docs" location="./docs/"/>
	<property name="test" location="./src/test/"/>
	<property name="build.central.descriptions.dir" location="build/central/descriptions/"/>
	<property name="build.central.dir" location="build/central/"/>
	<property name="build.client.descriptions.dir" location="build/client/descriptions/"/>
	<property name="src.fr.uvsq.fsp.client.descriptions.dir" location="src/fr/uvsq/fsp/client/descriptions/"/>
	<property name="src.fr.uvsq.fsp.server.users" location="src/fr/uvsq/fsp/server/utilisateurs.csv"/>

	<path id="classpath">
		<pathelement location="${src}"/>
		<fileset dir="${lib}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="classpath.test">
		<pathelement location="${src}"/>
		<pathelement location="${lib}/junit4.jar"/>
		<pathelement location="${lib}/hamcrest-core.jar"/>
		<pathelement location="${build}"/>
	</path>

	<target name="init" depends="clean">
		<tstamp/>
		<mkdir dir="${build}"/>
	</target>

	<target name="all" depends="doc,test,dist"/>

	<target name="compile" depends="init" description="Generating the class files">
		<javac includeantruntime="false" sourcepath="" srcdir="${src}" destdir="${build}" debug="true" debuglevel="lines,vars,source">
			<include name="**/*.java"/>
			<classpath refid="classpath.test"/>
		</javac>
		<mkdir dir="${build.central.descriptions.dir}"/>
		<!-- Copy users file (id, password hash) -->
		<copy file="${src.fr.uvsq.fsp.server.users}" todir="${build.central.dir}"/>
		<mkdir dir="${build.client.descriptions.dir}"/>
		<!-- Copy all descriptions -->
		<copy todir="${build.client.descriptions.dir}">
			<fileset dir="${src.fr.uvsq.fsp.client.descriptions.dir}">
				<include name="*"/>
			</fileset>
		</copy>
	</target>

	<target name="dist" depends="compile" description="Generating the jar files">
		<mkdir dir="${dist}/lib/"/>
		<jar jarfile="${dist}/lib/fsp-central-${DSTAMP}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${src}.fr.uvsq.fsp.server.Central"/>
			</manifest>
		</jar>
		<jar jarfile="${dist}/lib/fsp-server-${DSTAMP}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${src}.fr.uvsq.fsp.client.CServer"/>
			</manifest>
		</jar>
		<jar jarfile="${dist}/lib/fsp-client-${DSTAMP}.jar" basedir="${build}">
			<manifest>
				<attribute name="Main-Class" value="${src}.fr.uvsq.fsp.client.Client"/>
			</manifest>
		</jar>
	</target>

	<target name="exe" depends="compile">
		<java classname="fr.uvsq.fsp.server.Central" dir="${build}">
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${build.fr.dir}"/>
			</classpath>
			<arg value="60000"/>
		</java>
	</target>

	<target name="clean" description="Cleaning the build and dist folder">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>

	<target name="doc" description="Generating the documentation">
		<javadoc sourcepath="${src}" destdir="${docs}">
			<classpath refid="classpath.test"/>
		</javadoc>
	</target>

	<target name="test" depends="compile" description="Compiling and executing the tests">
		<junit printsummary="yes" haltonfailure="yes" fork="true">
			<formatter type="plain"/>
			<classpath>
				<path refid="classpath.test"/>
				<pathelement location="${build.test.dir}"/>
			</classpath>
			<test name="test.TestChecksum"/>
			<test name="test.TestClient"/>
			<test name="test.TestServer"/>
		</junit>
	</target>
</project>
